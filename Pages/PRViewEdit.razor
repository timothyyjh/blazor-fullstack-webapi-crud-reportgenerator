@page "/ViewPR/"
@page "/ViewPR/{Id:int}"
@inject IePRService ePRService
@inject NavigationManager NavigationManager

@if (Id == null)
{
    //Implementation to be corrected
    <h3>Create a New Purchase Order [Code: @*@ePRService.PurchaseOrders.OrderByDescending(x => x.Code).FirstOrDefault().Code + 1;*@] </h3>

}
else
{
    <h3>Edit Purchase Order [Code: @newPurchaseOrderModel.Code]</h3>
}


<body>
    <EditForm Model="newPurchaseOrderModel" OnValidSubmit="HandleSave">
        <div>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <table class="table table-bordered table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Code:</th>
                        <th>Date:</th>
                        <th>Supplier:</th>
                        <th>Supplier Name:</th>
                        <th>Doc No:</th>
                        <th>Supplier Address Line:</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <label for="code"></label>
                            @* Need to display last Code ID + 1 *@
                            @if (Id != null)
                            {
                                @Id
                            }
                            else
                            {
                                @*@ePRService.PurchaseOrders.OrderByDescending(x => x.Code).FirstOrDefault().Code + 1;*@
                            }
                        </td>
                        <td>
                            <label for="date"></label>
                            <InputDate id="dateinput" class="form-control" @bind-Value="newPurchaseOrderModel.Date" />
                        </td>
                        <td>
                            <label for="supplier"></label>
                            <InputSelectNumber id="supplierselect" @bind-Value="newPurchaseOrderModel.Supplier" class="form-control">
                                @foreach (var supplier in ePRService.Suppliers)
                                {
                                    <option value="" selected disabled hidden></option>
                                    <option value="@supplier.Code">@supplier.Code</option>
                                }
                            </InputSelectNumber>
                        </td>
                        <td>
                            @* Cascading inputs not auto selecting *@
                            <label id="suppliername"></label>
                            <InputSelect id="suppliernameselect" @bind-Value="newPurchaseOrderModel.SupplierName" class="form-control">
                                @foreach (var item in ePRService.Suppliers.Where(x => x.Code == newPurchaseOrderModel.Supplier))
                                {
                                    <option value="" disabled selected>Select the supplier's name</option>
                                    <option value="@item.Name">@item.Name</option>
                                }
                            </InputSelect>
                        </td>
                        <td>
                            <label for="docno"></label>
                            <InputNumber id="numberinput" class="form-control" @bind-Value="newPurchaseOrderModel.DocNumber" />
                        </td>
                        <td>
                            <label for="Supplier Address"></label>
                            @foreach (var item in ePRService.Suppliers.Where(x => x.Code == newPurchaseOrderModel.Supplier))
                            {
                                <InputSelect id="supplieraddress" @bind-Value="newPurchaseOrderModel.AddressLine1" class="form-control">
                                    <option value="" selected></option>
                                    <option value="@item.AddressLine1">@item.AddressLine1</option>
                                </InputSelect>

                                <InputSelect id="supplieraddress" @bind-Value="newPurchaseOrderModel.AddressLine2" class="form-control">
                                    <option value="" selected></option>
                                    <option value="@item.AddressLine2">@item.AddressLine2</option>
                                </InputSelect>

                                <InputSelect id="supplieraddress" @bind-Value="newPurchaseOrderModel.AddressLine3" class="form-control">
                                    <option value="" selected></option>
                                    <option value="@item.AddressLine3">@item.AddressLine3</option>
                                </InputSelect>

                                <InputSelect id="supplieraddress" @bind-Value="newPurchaseOrderModel.AddressLine4" class="form-control">
                                    <option value="" selected></option>
                                    <option value="@item.AddressLine4">@item.AddressLine4</option>
                                </InputSelect>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
            <br />
        </div>

        <button class="btn btn-primary mb-3 rounded-pill" type="button" @onclick="() => HandleItemReferenceAdd()"><i class="oi oi-plus"></i></button>
        <table class="table table-borderless table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>Code</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ePRService.ItemLists.Where(x => x.POCode == Id))
                {
                    <tr>
                        <td>@item.Code</td>
                        <td>@item.Qty</td>
                        <td>@item.Price</td>
                        <td><button class="btn btn-danger rounded-pill" type="button" @onclick="() => DeleteItem(item.Id)"><i class="oi oi-minus"></i></button></td>
                    </tr>
                }
            </tbody>
        </table>
        <div>
            <button class="btn btn-success mb-3" type="submit">Save</button>
            <button class="btn btn-warning mb-3" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>
</body>

@code {
    [Parameter]
    public int? Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            newPurchaseOrderModel = await ePRService.GetPurchaseOrderModelId((int)Id);
        }
        else
        {
            // Implementation to be corrected
            @*@ePRService.PurchaseOrders.OrderByDescending(x => x.Code).FirstOrDefault().Code + 1;*@
        }
    }

    ItemListModel newItemListModel = new ItemListModel();
    PurchaseOrderModel newPurchaseOrderModel = new PurchaseOrderModel();
    SupplierModel newSupplier = new SupplierModel();
    ItemModel newItem = new ItemModel();

    protected override async Task OnInitializedAsync()
    {
        await ePRService.GetSupplier();
        await ePRService.GetPurchaseOrderItemList();
    }

    private void HandleItemReferenceAdd()
    {
        NavigationManager.NavigateTo($"/ItemList/{Id}");
    }

    private void DeleteItem(int id)
    {
        ePRService.DeletePurchaseOrderItemList(id);
        NavigationManager.NavigateTo($"/ViewPR/{Id}", true);
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/purchaseorder");
    }

    async Task HandleSave()
    {
        if (Id == null)
        {
            await ePRService.CreatePurchaseOrderModel(newPurchaseOrderModel);
            NavigationManager.NavigateTo("/purchaseorder", true);
        }
        else
        {
            await ePRService.UpdatePurchaseOrderModel(newPurchaseOrderModel);
            NavigationManager.NavigateTo("/purchaseorder", true);
        }
    }
}
